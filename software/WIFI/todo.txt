待完成：
1，改变字符数据源，能解析指定的字符数据源
	需要改变的字符源格式符合这个规则（结尾符是'\0'）
	需要添加一个解析字符源的函数，重新定位start和store

2，（已解决）自动换行模式，在普通模式的基础上增加自动换行，阅读更加方便
	换行的行不能视为独立的行，当移动偏移时会和上一行一起消失
	改进getFirstLineIdx函数为getFirstLineIdx_autoBreakLine

3，（已解决）CONSOLE_PRINT模式，动态生成动画速度，根据将要打印的数据行数增加或者减少打印速度
	需要更改addstring函数记录行数（在有新行动画时记录）

4，（已解决）CONSOLE_PRINT模式，生成新行动画

5，（已解决）CONSOLE_PRINT模式，如何在字符大于窗口边沿时换行生成动画
	需要统计最后一行的字符数在要换行时形成动画偏移，并清零字符数

6，（已解决）CONSOLE_PRINT模式，向上偏移查看历史行，如果超过历史行会导致画面抖动
	限制viewer->scroll_pixel的最大值为历史行数对应的高度

7，（已解决）CONSOLE_PRINT模式，向上偏移查看历史行，到达最大偏移，又回到第二行开始显示
	是因为到达最大偏移后，viewer->scroll_pixel/viewer->char_h + 1;能被整除，history_line加一，skipLineNum == -1 是一种特殊情况，此时历史行找不到了，
	变成正常的第一行了，就造成最大偏移时第一行显示的是第二行，负一行显示的是第一行应该弥补

8，（已解决）CONSOLE_PRINT模式，屏幕没有填充完也会有打印动画
	在屏幕没有填充完的情况下total_line  <= line_cnt-1需要scroll_pixel直接清零，如果不清零就会形成动画

9，（已解决）CONSOLE_PRINT模式，第一行显示在负数行
	在屏幕没有填充完的情况下total_line  <= line_cnt-1需要scroll_pixel直接清零和消除历史行的偏移history_line，历史行正常情况会显示在负行数位置，因为此时scroll_pixel为零，
	会导致正常行显示在负行数
	所以要清零抵消scroll_pixel为零的后果

10，（已解决）字符数据只有一行数据（缓存中没有任何'\n'换行符），在使用addstring函数添加字符时，store位置和start位置重合时，没有正确找到新的start位置，屏幕有多余的显示，
	正常情况应该没有任何字符
	是因为skipLineNum为非正值时返回为零，应该返回start位置，因为store位置和start位置重合时，位置不确定

11，（已解决）CONSOLE_PRINT模式，切换窗口大小时会导致viewer->processd_cnt没有改变，导致新行的动画位置出现错误
	实现Recalculate_processed_cnt函数，在切换窗口大小时调用，重新计算processd_cnt

12，（已完成）CONSOLE_PRINT模式，支持开屏打印功能

13，（已完成）普通模式下打印解析器能跟踪定位到字符

14，（已完成）自动换行模式下打印解析器能跟踪到字符

15，串口功能演示，串口发送字符来显示演示功能

16，普通模式和AUTO模式下输入时窗口可以跟踪

17，（已完成）清空字符缓存

18，（已完成）忽略'\r'

19，（已解决）clear执行完对于normal和autobrk mode显示没有变化

20，（已解决）窗口上方还是多余的显示文字，可能画图库没有处理好

21，（已完成）Linux开发板串口连接手表，Linux开发板接收键盘字符通过串口发送给手表作为输入设备

22，windows程序输出键盘字符（usbtottl丢了）

23，（已解决）在NOERMAL模式下，当字符缓存满时，再按下print不带换行功能时，会卡死
	这种print不带换行符，可能和这个有关，getTotalLine_noAutoBrk函数中忘了判断换行符了

24，（已完成）需要加入键盘输入模式，因为当使用键盘模式时，数据是一个一个字符输入进去的，遇到换行会立即换行显示，普通模式如果换行符后面没有任何字符是不会显示出来空白的

25，（已解决）关闭和打开字符过滤process_cnt重新计算错误：因为Recalculate_processed_cnt计算错误

26，（已解决）console和auto模式下打开字符过滤会有显示异常 ：因为getTotalLine计算有异常

27，（已完成）实现光标

28，（已完成）光标跟踪

30，（已完成）在第三个解析器上实现命令行

